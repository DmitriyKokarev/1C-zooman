

//++
Метод set_invoice, запрашивается из 1С к zooman. Имя метода может быть изменено
Params и authorization могут быть любые другие. Использовал для себя в качестве тестов

Тело метода:
invoices - массив, который содержит следующие поля:
	invoice - ассоциативный массив
		XML_ID - Строка(36) - уникальный идентификатор документа "Реализация товаров и услуг" - по этому идентификатору в будущем надо идентифицировать док-т в 1С.
		state - Строка(36) - статус документа Реализация товаров и услуг.
		date - Строка(36) - дата документа в формате ... (каком то формате, могу точное определение найти, если надо)
		number - Строка(36) - номер документа в 1С
		contragent - Строка(300) - Наименование контрагента 
		warehouse - Строка(300) - наименование склада
		weight - Строка(15) - объем документа в 1С //Могу передавать числом
		volume - Строка(15) - вес документа в 1С  //Могу передавать числом
		upd_number - номер документа Счет-фактура. Номер документа будет отправляться без префиксов - только значащие цифры.

	delivery - ассоциативный массив
		address - Строка(1000) - адрес доставки
		real_address - Строка(1000) - еще один адрес доставки (может отличаться с значением в поле address)
		driver - Строка(300) - ФИО водителя
		phone - Строка(36) - тел. фодителя. Формат может быть любой
		car_model - Строка(100) - модель авто
		car_number - Строка(100) - гос. номер авто
		shipping_date - Строка(36) - дата отгрузки со склада в формате ... Пример: "2023-06-28T00:00:00"
		shipping_time - Строка(36) - время отгрузки со склада в формате ... Пример: "0001-01-01T11:00:00"
		temp_regime - Строка(36) - Температурный режим. Принимает значения "Да" / ""
		payment_type - Строка(100) - тип оплаты. Принимает значения "Наличными" / "ПлатежнаяКарта" / "БанковскийКредит", что означает, соответственно, "Наличными" / "По терминалу" / "На расчетный счет"
		customer_comment - Строка(300) - Комментарий клиента к заказу

	orders - массив, элемент которого является ассоциативный массив с полями:
		order_id - Строка(36) - идентификатор заказа клиента на сайте. На данный момент это число, по которому идентифицируются заказы на сайте при обмене с 1С (я думаю это номер заказа на сайте https://i.imgur.com/R8TBYTf.png)
				

Пример тела:

{
   "invoices":[
      {
         "invoice":{
            "XML_ID":"82b1bf4a-ec99-11ec-ab82-00155d704702",
            "state":"Со склада",
            "date":"2022-06-16T09:56:45",
            "number":"СУр00047307",
            "contragent":"Исмагилов Линар Фаризунович ИП",
            "warehouse":"Тюмень (Симбио-Урал)",
            "weight":87.377,
            "volume":0.2145229
         },
         "delivery":{
            "address":",625047, Тюменская обл, , Тюмень г, , Беловежская ул, 19, 1, , дом, корпус, кв.",
            "real_address":"",
            "driver":"",
            "phone":"",
            "car_model":"",
            "car_number":""
         },
         "orders":[
            {
               "order_id":"33974"
            },
            {
               "order_id":"33976"
            }
         ]
      },
      {
         "invoice":{
            "XML_ID":"1c9ea363-ec97-11ec-ab82-00155d704702",
            "state":"Готов",
            "date":"2022-06-16T13:25:37",
            "number":"СУр00047293",
            "contragent":"Дехтярева Альбина Сергеевна ИП",
            "warehouse":"3 Симбио Урал",
            "weight":425.51408,
            "volume":1.0471377
         },
         "delivery":{
            "address":",628403, Ханты-Мансийский Автономный округ - Югра АО, , Сургут г, , Мира пр-кт, 5, , , дом, корпус, кв.",
            "real_address":"",
            "driver":"ИВАЧЕВ СЕРГЕЙ ВАСИЛЬЕВИЧ",
            "phone":"8-996-178-95-64",
            "car_model":"ФОТОН",
            "car_number":"Н 065 РА 196 RUS"
         },
         "orders":[
            {
               "order_id":"33951"
            },
            {
               "order_id":"33967"
            }
         ]
      }
   ]
}
//--

//++
Метод set_pdf, запрашивается из 1С к zooman. Имя метода может быть изменено
Params и authorization могут быть любые другие. Использовал для себя в качестве тестов

Тело метода:
В теле метода передаётся zip архив с файлами в формате pdf. Наименование файлов составлены по следующему алгоритму: <XML_ID документа Реализация товаров и услуг>.pdf
//--

//++
Метод invoice_agreed, запрашивается из Zooman в 1С.
Params - структура с ключем "method" и значением ключа "invoice_agreed".
Authorization - username и password указаны в postman-е.

Тело метода:
JSON с полями:
	invoice - содержит XML_ID документа Реализация товаров и услуг
	agreed - булево, означающее согласован заказ или нет.

Пример:
{
  "invoice": "2259aa68-e334-11ec-ab82-00155d704702",
  "agreed": true
  
}
//--

//++
Метод get_upd, запрашивается из Zooman в 1С.
Params - структура с ключем "method" и значением ключа "get_upd".
Authorization - username и password указаны в postman-е.

Тело метода:
JSON с полем invoice, который содержит XML_ID документа Реализация товаров и услуг

Пример:
{
  "invoice": "2259aa68-e334-11ec-ab82-00155d704702"
}

Ответ: тело ответа будет содержать pdf файл.
//--

//++
Метод get_pdf_invoice, запрашивается из Zooman в 1С.
Params - структура с ключем "method" и значением ключа "get_pdf_invoice".
Authorization - username и password указаны в postman-е.

Тело метода:
JSON с полем invoice, который содержит XML_ID документа Реализация товаров и услуг

Пример:
{
  "invoice": "2259aa68-e334-11ec-ab82-00155d704702"
}

Ответ: тело ответа будет содержать pdf файл.
//--


//++
Метод goodsInvoice, запрашивается из Zooman в 1С.
Params - структура с ключем "method" и значением ключа "goodsInvoice".
Authorization - username и password указаны в postman-е.

Тело метода:
JSON с полем invoice, который содержит XML_ID документа Реализация товаров и услуг

Пример:
{
  "invoice": "693ab50a-4938-11ed-ab67-00155d014300"
}

Ответ: товары документа с количеством и ценами
goods - ассоциативный массив, с полями
	xml_id - уникальный идентификатор 1С товара
	count - количество товара по документу
	price - цена товара по документу.

Пример ответа:

{
   "goods":[
      {
         "xml_id":"ef67746e-ead9-11e3-b386-003048dc4e8b",
         "count":4,
         "price":152
      }
   ]
}
//--

//++
Метод reasonClaim, запрашивается из Zooman в 1С.
Params - структура с ключем "method" и значением ключа "reasonClaim".
Authorization - username и password

Тело метода - не имеет значения

Ответ: возможные варианты причины попадания товара в претензию
reasons - ассоциативный массив, с полями
	xml_id - уникальный идентификатор 1С причины
	name - наименование причины

//--


//++
Метод createClaim, запрашивается из Zooman в 1С.
Params - структура с ключем "method" и значением ключа "createClaim".
Authorization - username и password

Тело метода:
JSON с полями
invoice - XML_ID документ Реализация товаров и услуг
comment - строка, комментарий к претензии
goods - ассоциативный массив, с полями
	xml_id - уникальный идентификатор 1С товара
	quantity_doc - количество документ
	quantity_act - количество фактически
	quantity_def - количество брак
	reason - уникальный идентификатор причины претензии. Идентификатор можно запросить в методе reasonClaim
		Пересорт (Пересорт)
		Недостача (Недостача)
		Излишек (Излишек)
		БракБой (Брак (бой))
		БракИстекщийСрок (Брак (истекщий срок))
		БракКртичиныйСрок (Брак (критичный срок))
		БракНедокомплект (Брак (недокомплект))
		БракПоврежденаУпаковка (Брак (повреждена упаковка))
		Другое (Другое)
		ОтсутствуютДокументы (Отсутствуют документы (накладная, вет. справка, сертификат))
		НетВЗаказе (Нет в заказе)

Пример:
{
  "invoice": "2259aa68-e334-11ec-ab82-00155d704702",
  "comment": "порвана упаковка", 
   "goods":[
      {
         "xml_id":"ef67746e-ead9-11e3-b386-003048dc4e8b",
         "quantity_doc":4,
         "quantity_act":3,
         "quantity_def":0,
         "reason":"Недосдача"
      }
   ]
}

Ответ: уникальный идентификатор, номер и статус претензии
xml_id - уникальный идентификатор 1С товара
number - номер документа 1С
state - статус претензии 

Пример ответа:
{
   "xml_id":"ef67746e-ead9-11e3-b386-003048dc4e8b",
   "number":"000006515",
   "state":"Претензия в работе"
}

//--


//++
Метод updateClaim, запрашивается из 1С в Zooman.
Params - структура с ключем "method" и значением ключа "updateClaim".
Authorization - username и password

Тело метода: претензии с статусами
JSON с полями
	claim - ассоциативный массив с полями
		xml_id - XML_ID документа Претензия
		state - строка-статус претензии в 1С
		goods - ассоциативный массив с полями
			xml_id - уникальный идентификатор товара (строка (36));
			quantity_doc - количество товара в документе (число(12,0));
			quantity_act - количество товара фактически (число(12,0));
			quantity_def - количество товара брак (число(12,0));
			reason - причина попадания товара в претензию (уникальный идентификатор причины. см. метод reasonClaim);
			claimResult - результат претензии по товару (строка (64));

Пример:
{
   "claim":[
      {
         "xml_id":"5f99828a-01c4-11ed-ab82-00155d704702",
         "state":"Претензия в работе",
         "goods":[
            {
               "xml_id":"9631da1c-2800-11eb-ab5e-00155dc91203",
               "quantity_doc":"3",
               "quantity_act":"2",
               "quantity_def":"0",
               "reason":"Недостача",
               "claimResult":""
            }
         ]
      }
   ]
}
//--


//++
Метод getReconciliationAct, запрашивается из Zooman.
Params - структура с ключем "method" и значением ключа "getReconciliationAct".
Authorization - username и password

Тело метода: 
JSON с полями
	claim - ассоциативный массив с полями
		Client - guid 1c Контрагента
		DateStart - дата начала формирования акта сверки
		DateEnd - дата окончания формирования акта сверки

Ответ: двоичные данные файла акта сверки в теле ответа.

Пример:
{
    "Client":"f305e0f3-5cc6-11ec-ab81-00155d704701",
    "DateStart":"2023-01-01",
    "DateEnd":"2023-03-31"
}
//--
